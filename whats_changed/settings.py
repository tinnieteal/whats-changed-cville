"""
Django settings for whats_changed project.
Generated by 'django-admin startproject' using Django 3.1.6.
For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
from pathlib import Path

#import django_heroku
import sys
import os


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '40o_e9bh9#76_794qd3(fgymloq82(+sdf(#u+f$#6b@tv+9tp'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['whats-changed-cville.herokuapp.com', '127.0.0.1', 'localhost']

# Application definition

INSTALLED_APPS = [
    'mainapp.apps.MainappConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
]
#if '/app' in os.environ['HOME']:
#django_heroku.settings(locals())

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware', #https://devcenter.heroku.com/articles/django-assets - whitenoise to ensure Map is displayed (Heroku Dev Center) 
]

ROOT_URLCONF = 'whats_changed.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'whats_changed.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases
# https://medium.com/analytics-vidhya/provisioning-a-test-postgresql-database-on-heroku-for-your-django-app-febb2b5d3b29

if 'test' in sys.argv:
    #print('yes')
    #configuration for test database
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            #'ENGINE': 'django.db.backends.postgresql_psycopg2',
            #'NAME': 'dbk97rc252a2j0',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
            # 'USER': 'lnmcltbuifyaym',
            # 'PASSWORD':
            # '0f31d2fd2021e4e65bedacf7210c8ee7e999ba3c8528afc0679e8881bbf2f08f',
            # 'HOST': 'ec2-54-164-241-193.compute-1.amazonaws.com',
            # 'PORT': '5432',
            #   'NAME': 'dbk97rc252a2j0',
            }
        }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'd3n9l5ia4bu8j8',
            'USER': 'wrqhjeodxaglin',
            'PASSWORD':
            '86979f8ec81d6a15d388a1fc94f61f9c9254c8f317c53760ced15e5734f1f220',
            'HOST': 'ec2-18-207-95-219.compute-1.amazonaws.com',
            'PORT': '5432',
            'TEST': {
                'NAME': 'd3n9l5ia4bu8j8',
            }
        }
    }

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME':
        'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'EST'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'
# STATICFILES_DIRS = [os.path.join(BASE_DIR,"static")]
# #STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
# STATICFILES_FINDERS = [
#     'django.contrib.staticfiles.finders.FileSystemFinder',
#     'django.contrib.staticfiles.finders.AppDirectoriesFinder',
# ]
STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'


# Activate Django-Heroku.
#django_heroku.settings(locals())

# specify the allauth backend
# https://whizzoe.medium.com/in-5-mins-set-up-google-login-to-sign-up-users-on-django-e71d5c38f5d5
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

# https://www.section.io/engineering-education/django-google-oauth/
SITE_ID = 6

LOGIN_REDIRECT_URL = '/mainapp/map'
LOGOUT_REDIRECT_URL = '/'
ACCOUNT_LOGOUT_ON_GET = True
# TESTING = len(sys.argv) > 1 and sys.argv[1] == 'test'
# SECURE_SSL_REDIRECT = False if TESTING else True
# SESSION_COOKIE_SECURE = True
# CSRF_COOKIE_SECURE = True

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    }
}

#DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

'''try:
    # Configure Django App for Heroku.
    import django_heroku
    django_heroku.settings(locals())
except ImportError:
    found = False'''

if 'HEROKU' in os.environ:
    import django_heroku
    django_heroku.settings(locals())
